server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # ✅ 로그아웃 요청은 백엔드로 직접 전달
    location /logout {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # ✅ WebSocket (STOMP, SockJS) 프록시 추가
    location /ws-connect {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # ✅ API 프록시 (쿠키 포함)
    location /api {
        # ✅ /api/oauth2 요청은 별도로 처리
        location ~ ^/api/oauth2 {
            rewrite ^/api/oauth2/(.*)$ /oauth2/$1 break;
            proxy_pass http://backend:8081;
        }

        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # ✅ /auction 프록시 (경매 관련)
    location /api/auction {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # ✅ /oauth2 및 /login 직접 프록시
    location /oauth2 {
        proxy_pass http://backend:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    location /login {
        proxy_pass http://backend:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    # ✅ 정적 리소스 캐싱
    location ~* \.(?:css|js|svg|png|jpg|jpeg|gif|webp)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri /index.html;
    }

    # ✅ React Router SPA 라우팅 (맨 마지막에 둬야 함)
    location / {
        try_files $uri /index.html;
    }

    # ✅ 압축
    gzip on;
    gzip_types text/plain text/css application/json application/javascript;
}
